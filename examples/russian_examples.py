"""
–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞
"""

import os
from datetime import date, timedelta
from tradingagents.graph.russian_trading_graph import RussianTradingAgentsGraph
from tradingagents.russian_config import set_llm_provider, get_russian_config


def example_1_basic_analysis():
    """–ü—Ä–∏–º–µ—Ä 1: –ë–∞–∑–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑ —Ä–æ—Å—Å–∏–π—Å–∫–æ–π –∫–æ–º–ø–∞–Ω–∏–∏"""
    print("=" * 60)
    print("–ü–†–ò–ú–ï–† 1: –ë–∞–∑–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑ –°–±–µ—Ä–±–∞–Ω–∫–∞")
    print("=" * 60)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Deepseek
    set_llm_provider(
        provider="deepseek",
        deep_model="deepseek-reasoner",
        fast_model="deepseek-chat",
        api_key=os.getenv("DEEPSEEK_API_KEY")
    )
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –≥—Ä–∞—Ñ–∞
    graph = RussianTradingAgentsGraph(
        selected_analysts=["market", "news", "fundamentals"],
        debug=False  # –û—Ç–∫–ª—é—á–∞–µ–º –æ—Ç–ª–∞–¥–∫—É –¥–ª—è —á–∏—Å—Ç–æ–≥–æ –≤—ã–≤–æ–¥–∞
    )
    
    # –ê–Ω–∞–ª–∏–∑ –°–±–µ—Ä–±–∞–Ω–∫–∞
    ticker = "SBER"
    analysis_date = "2024-12-20"
    
    print(f"üîç –ê–Ω–∞–ª–∏–∑ {ticker} –Ω–∞ –¥–∞—Ç—É {analysis_date}")
    
    try:
        final_state, decision = graph.propagate(ticker, analysis_date)
        
        print(f"\nüéØ –§–ò–ù–ê–õ–¨–ù–û–ï –†–ï–®–ï–ù–ò–ï: {decision}")
        
        # –ö—Ä–∞—Ç–∫–∞—è —Å–≤–æ–¥–∫–∞ –ø–æ –∫–∞–∂–¥–æ–º—É –æ—Ç—á–µ—Ç—É
        if final_state.get("market_report"):
            print(f"\nüìä –†—ã–Ω–æ—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑ (–∫—Ä–∞—Ç–∫–∞—è –≤—ã–¥–µ—Ä–∂–∫–∞):")
            print(final_state["market_report"][:300] + "...")
        
        if final_state.get("news_report"):
            print(f"\nüì∞ –ù–æ–≤–æ—Å—Ç–Ω–æ–π –∞–Ω–∞–ª–∏–∑ (–∫—Ä–∞—Ç–∫–∞—è –≤—ã–¥–µ—Ä–∂–∫–∞):")
            print(final_state["news_report"][:300] + "...")
        
        if final_state.get("fundamentals_report"):
            print(f"\nüíº –§—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ (–∫—Ä–∞—Ç–∫–∞—è –≤—ã–¥–µ—Ä–∂–∫–∞):")
            print(final_state["fundamentals_report"][:300] + "...")
            
        print(f"\n‚úÖ –ê–Ω–∞–ª–∏–∑ {ticker} –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ {ticker}: {e}")


def example_2_portfolio_analysis():
    """–ü—Ä–∏–º–µ—Ä 2: –ê–Ω–∞–ª–∏–∑ –ø–æ—Ä—Ç—Ñ–µ–ª—è —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∞–∫—Ü–∏–π"""
    print("\n" + "=" * 60)
    print("–ü–†–ò–ú–ï–† 2: –ê–Ω–∞–ª–∏–∑ –ø–æ—Ä—Ç—Ñ–µ–ª—è —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∞–∫—Ü–∏–π")
    print("=" * 60)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Gemini –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è
    set_llm_provider(
        provider="gemini",
        deep_model="gemini-2.5-pro",
        fast_model="gemini-2.5-flash",
        api_key=os.getenv("GEMINI_API_KEY")
    )
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –≥—Ä–∞—Ñ–∞
    graph = RussianTradingAgentsGraph(
        selected_analysts=["market", "news"],  # –¢–æ–ª—å–∫–æ —Ä—ã–Ω–æ–∫ –∏ –Ω–æ–≤–æ—Å—Ç–∏ –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏
        debug=False
    )
    
    # –ü–æ—Ä—Ç—Ñ–µ–ª—å –≥–æ–ª—É–±—ã—Ö —Ñ–∏—à–µ–∫
    portfolio_tickers = ["SBER", "GAZP", "LKOH", "YNDX"]
    analysis_date = "2024-12-20"
    
    print(f"üíº –ê–Ω–∞–ª–∏–∑ –ø–æ—Ä—Ç—Ñ–µ–ª—è: {', '.join(portfolio_tickers)}")
    print(f"üìÖ –î–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞: {analysis_date}")
    
    try:
        results = graph.analyze_portfolio(portfolio_tickers, analysis_date)
        
        # –í—ã–≤–æ–¥–∏–º —Å–≤–æ–¥–∫—É
        print(results["portfolio_summary"])
        
        # –î–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        print("\nüìã –î–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        for ticker, recommendation in results["recommendations"].items():
            if "ERROR" in recommendation:
                print(f"  ‚ùå {ticker}: –û–®–ò–ë–ö–ê")
            elif any(word in recommendation.upper() for word in ["–ü–û–ö–£–ü–ê–¢–¨", "BUY"]):
                print(f"  üü¢ {ticker}: –ü–û–ö–£–ü–ê–¢–¨")
            elif any(word in recommendation.upper() for word in ["–ü–†–û–î–ê–í–ê–¢–¨", "SELL"]):
                print(f"  üî¥ {ticker}: –ü–†–û–î–ê–í–ê–¢–¨")
            else:
                print(f"  üü° {ticker}: –î–ï–†–ñ–ê–¢–¨")
        
        print(f"\n‚úÖ –ê–Ω–∞–ª–∏–∑ –ø–æ—Ä—Ç—Ñ–µ–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è: {e}")


def example_3_market_overview():
    """–ü—Ä–∏–º–µ—Ä 3: –û–±–∑–æ—Ä —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ —Ä—ã–Ω–∫–∞"""
    print("\n" + "=" * 60)
    print("–ü–†–ò–ú–ï–† 3: –û–±–∑–æ—Ä —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ —Ä—ã–Ω–∫–∞")
    print("=" * 60)
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º Deepseek –¥–ª—è –æ–±–∑–æ—Ä–∞ —Ä—ã–Ω–∫–∞
    set_llm_provider(
        provider="deepseek",
        deep_model="deepseek-reasoner",
        fast_model="deepseek-chat",
        api_key=os.getenv("DEEPSEEK_API_KEY")
    )
    
    graph = RussianTradingAgentsGraph(debug=False)
    
    analysis_date = "2024-12-20"
    
    print(f"üèõÔ∏è –û–±–∑–æ—Ä —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ —Ä—ã–Ω–∫–∞ –Ω–∞ {analysis_date}")
    
    try:
        summary = graph.get_russian_market_summary(analysis_date)
        
        print(f"\nü§ñ –ò—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –º–æ–¥–µ–ª—å: {summary['config']}")
        print(f"üìÖ –î–∞—Ç–∞: {summary['date']}")
        
        # –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤
        print(f"\nüìà –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ –∏–Ω–¥–µ–∫—Å—ã:")
        for index, data in summary["indices"].items():
            if "–û—à–∏–±–∫–∞" not in data:
                print(f"  ‚úÖ {index}: –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã")
            else:
                print(f"  ‚ùå {index}: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö")
        
        # –û–±–∑–æ—Ä —Ä—ã–Ω–∫–∞
        if summary["market_overview"]:
            print(f"\nüì∞ –û–±–∑–æ—Ä —Ä—ã–Ω–∫–∞:")
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤
            overview_text = summary["market_overview"][:500]
            if len(summary["market_overview"]) > 500:
                overview_text += "..."
            print(overview_text)
        
        print(f"\n‚úÖ –û–±–∑–æ—Ä —Ä—ã–Ω–∫–∞ –ø–æ–ª—É—á–µ–Ω!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–∑–æ—Ä–∞ —Ä—ã–Ω–∫–∞: {e}")


def example_4_sector_analysis():
    """–ü—Ä–∏–º–µ—Ä 4: –ê–Ω–∞–ª–∏–∑ —Å–µ–∫—Ç–æ—Ä–∞ (–±–∞–Ω–∫–∏)"""
    print("\n" + "=" * 60)
    print("–ü–†–ò–ú–ï–† 4: –ê–Ω–∞–ª–∏–∑ –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å–µ–∫—Ç–æ—Ä–∞")
    print("=" * 60)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞
    set_llm_provider(
        provider="deepseek",
        deep_model="deepseek-reasoner",
        fast_model="deepseek-chat",
        api_key=os.getenv("DEEPSEEK_API_KEY")
    )
    
    graph = RussianTradingAgentsGraph(
        selected_analysts=["market", "fundamentals"],
        debug=False
    )
    
    # –ë–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å–µ–∫—Ç–æ—Ä
    bank_tickers = ["SBER", "VTBR", "AFKS"]  # –°–±–µ—Ä–±–∞–Ω–∫, –í–¢–ë, –ê–§–ö –°–∏—Å—Ç–µ–º–∞
    analysis_date = "2024-12-20"
    
    print(f"üè¶ –ê–Ω–∞–ª–∏–∑ –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å–µ–∫—Ç–æ—Ä–∞: {', '.join(bank_tickers)}")
    
    try:
        results = graph.analyze_portfolio(bank_tickers, analysis_date)
        
        print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å–µ–∫—Ç–æ—Ä–∞:")
        
        buy_recommendations = []
        hold_recommendations = []
        sell_recommendations = []
        
        for ticker, rec in results["recommendations"].items():
            if any(word in rec.upper() for word in ["–ü–û–ö–£–ü–ê–¢–¨", "BUY"]):
                buy_recommendations.append(ticker)
            elif any(word in rec.upper() for word in ["–ü–†–û–î–ê–í–ê–¢–¨", "SELL"]):
                sell_recommendations.append(ticker)
            else:
                hold_recommendations.append(ticker)
        
        print(f"üü¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫ –ø–æ–∫—É–ø–∫–µ: {', '.join(buy_recommendations) if buy_recommendations else '–ù–µ—Ç'}")
        print(f"üü° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–µ—Ä–∂–∞—Ç—å: {', '.join(hold_recommendations) if hold_recommendations else '–ù–µ—Ç'}")
        print(f"üî¥ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫ –ø—Ä–æ–¥–∞–∂–µ: {', '.join(sell_recommendations) if sell_recommendations else '–ù–µ—Ç'}")
        
        # –û–±—â–∏–π –≤—ã–≤–æ–¥ –ø–æ —Å–µ–∫—Ç–æ—Ä—É
        if len(buy_recommendations) > len(sell_recommendations):
            print(f"\nüí° –û–±—â–∏–π –≤—ã–≤–æ–¥: –ë–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å–µ–∫—Ç–æ—Ä –≤—ã–≥–ª—è–¥–∏—Ç –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ")
        elif len(sell_recommendations) > len(buy_recommendations):
            print(f"\nüí° –û–±—â–∏–π –≤—ã–≤–æ–¥: –ë–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å–µ–∫—Ç–æ—Ä –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–¥ –¥–∞–≤–ª–µ–Ω–∏–µ–º")
        else:
            print(f"\nüí° –û–±—â–∏–π –≤—ã–≤–æ–¥: –ë–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å–µ–∫—Ç–æ—Ä –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ—Å—Ç–∏")
        
        print(f"\n‚úÖ –ê–Ω–∞–ª–∏–∑ –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å–µ–∫—Ç–æ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å–µ–∫—Ç–æ—Ä–∞: {e}")


def example_5_custom_config():
    """–ü—Ä–∏–º–µ—Ä 5: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("\n" + "=" * 60)
    print("–ü–†–ò–ú–ï–† 5: –ö–∞—Å—Ç–æ–º–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config = get_russian_config()
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –¥–ª—è –±–æ–ª–µ–µ –≥–ª—É–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
    config.update({
        "max_debate_rounds": 3,  # –ë–æ–ª—å—à–µ —Ä–∞—É–Ω–¥–æ–≤ –¥–µ–±–∞—Ç–æ–≤
        "max_risk_discuss_rounds": 3,
        "llm_provider": "deepseek",
        "deep_think_llm": "deepseek-reasoner",
        "quick_think_llm": "deepseek-chat",
        "deepseek_api_key": os.getenv("DEEPSEEK_API_KEY")
    })
    
    print("‚öôÔ∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞—Å—Ç–æ–º–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
    print(f"  - –†–∞—É–Ω–¥—ã –¥–µ–±–∞—Ç–æ–≤: {config['max_debate_rounds']}")
    print(f"  - –†–∞—É–Ω–¥—ã –æ–±—Å—É–∂–¥–µ–Ω–∏—è —Ä–∏—Å–∫–æ–≤: {config['max_risk_discuss_rounds']}")
    print(f"  - –ü—Ä–æ–≤–∞–π–¥–µ—Ä LLM: {config['llm_provider']}")
    print(f"  - –ú–æ–¥–µ–ª—å –≥–ª—É–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞: {config['deep_think_llm']}")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∞ —Å –∫–∞—Å—Ç–æ–º–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
    graph = RussianTradingAgentsGraph(
        selected_analysts=["market", "news", "fundamentals"],
        config=config,
        debug=False
    )
    
    # –ê–Ω–∞–ª–∏–∑ –Ø–Ω–¥–µ–∫—Å–∞ (—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∫–æ–º–ø–∞–Ω–∏—è)
    ticker = "YNDX"
    analysis_date = "2024-12-20"
    
    print(f"\nüîç –ì–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑ {ticker} —Å –∫–∞—Å—Ç–æ–º–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π")
    
    try:
        final_state, decision = graph.propagate(ticker, analysis_date)
        
        print(f"\nüéØ –§–ò–ù–ê–õ–¨–ù–û–ï –†–ï–®–ï–ù–ò–ï –¥–ª—è {ticker}: {decision}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –±—ã–ª–æ –±–æ–ª—å—à–µ –¥–µ–±–∞—Ç–æ–≤
        if final_state.get("investment_debate_state"):
            debate_history = final_state["investment_debate_state"].get("history", "")
            debate_rounds = debate_history.count("Bull Analyst:") + debate_history.count("Bear Analyst:")
            print(f"üìä –ü—Ä–æ–≤–µ–¥–µ–Ω–æ —Ä–∞—É–Ω–¥–æ–≤ –¥–µ–±–∞—Ç–æ–≤: {debate_rounds}")
        
        print(f"\n‚úÖ –ì–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑ {ticker} –∑–∞–≤–µ—Ä—à–µ–Ω!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–ª—É–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ {ticker}: {e}")


def main():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø—Ä–∏–º–µ—Ä–æ–≤"""
    print("üá∑üá∫ –ü–†–ò–ú–ï–†–´ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø –†–û–°–°–ò–ô–°–ö–û–ì–û –¢–û–†–ì–û–í–û–ì–û –§–†–ï–ô–ú–í–û–†–ö–ê")
    print("=" * 80)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–µ–π
    if not os.getenv("DEEPSEEK_API_KEY") and not os.getenv("GEMINI_API_KEY"):
        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã API –∫–ª—é—á–∏!")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ DEEPSEEK_API_KEY –∏–ª–∏ GEMINI_API_KEY")
        return
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
        example_1_basic_analysis()
        example_2_portfolio_analysis()
        example_3_market_overview()
        example_4_sector_analysis()
        example_5_custom_config()
        
        print("\n" + "=" * 80)
        print("‚úÖ –í–°–ï –ü–†–ò–ú–ï–†–´ –í–´–ü–û–õ–ù–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ results_russia/")
        print("=" * 80)
        
    except KeyboardInterrupt:
        print("\n\n‚èπÔ∏è –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n\n‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ—Ä–æ–≤: {e}")


if __name__ == "__main__":
    main()